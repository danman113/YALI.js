// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Expression Parsing Parses addition correctly 1`] = `
Binary {
  "left": Literal {
    "context": "regular",
    "value": 3,
  },
  "operator": Token {
    "endCoordinates": Coordinate {
      "col": 3,
      "index": 3,
      "line": 1,
    },
    "lexeme": "+",
    "literal": null,
    "startCoordinates": Coordinate {
      "col": 2,
      "index": 2,
      "line": 1,
    },
    "type": 7,
  },
  "right": Literal {
    "context": "regular",
    "value": 1,
  },
}
`;

exports[`Expression Parsing Parses addition correctly 2`] = `
Binary {
  "left": Unary {
    "operator": Token {
      "endCoordinates": Coordinate {
        "col": 1,
        "index": 1,
        "line": 1,
      },
      "lexeme": "-",
      "literal": null,
      "startCoordinates": Coordinate {
        "col": 0,
        "index": 0,
        "line": 1,
      },
      "type": 6,
    },
    "right": Literal {
      "context": "regular",
      "value": 2,
    },
  },
  "operator": Token {
    "endCoordinates": Coordinate {
      "col": 4,
      "index": 4,
      "line": 1,
    },
    "lexeme": "+",
    "literal": null,
    "startCoordinates": Coordinate {
      "col": 3,
      "index": 3,
      "line": 1,
    },
    "type": 7,
  },
  "right": Literal {
    "context": "regular",
    "value": 2,
  },
}
`;

exports[`Expression Parsing Parses addition correctly 3`] = `
Binary {
  "left": Unary {
    "operator": Token {
      "endCoordinates": Coordinate {
        "col": 1,
        "index": 1,
        "line": 1,
      },
      "lexeme": "-",
      "literal": null,
      "startCoordinates": Coordinate {
        "col": 0,
        "index": 0,
        "line": 1,
      },
      "type": 6,
    },
    "right": Literal {
      "context": "regular",
      "value": 3,
    },
  },
  "operator": Token {
    "endCoordinates": Coordinate {
      "col": 4,
      "index": 4,
      "line": 1,
    },
    "lexeme": "+",
    "literal": null,
    "startCoordinates": Coordinate {
      "col": 3,
      "index": 3,
      "line": 1,
    },
    "type": 7,
  },
  "right": Unary {
    "operator": Token {
      "endCoordinates": Coordinate {
        "col": 6,
        "index": 6,
        "line": 1,
      },
      "lexeme": "-",
      "literal": null,
      "startCoordinates": Coordinate {
        "col": 5,
        "index": 5,
        "line": 1,
      },
      "type": 6,
    },
    "right": Literal {
      "context": "regular",
      "value": 3,
    },
  },
}
`;

exports[`Expression Parsing Parses addition correctly 4`] = `
Binary {
  "left": Literal {
    "context": "regular",
    "value": 3,
  },
  "operator": Token {
    "endCoordinates": Coordinate {
      "col": 3,
      "index": 3,
      "line": 1,
    },
    "lexeme": "-",
    "literal": null,
    "startCoordinates": Coordinate {
      "col": 2,
      "index": 2,
      "line": 1,
    },
    "type": 6,
  },
  "right": Literal {
    "context": "regular",
    "value": 1,
  },
}
`;

exports[`Expression Parsing Parses addition correctly 5`] = `
Binary {
  "left": Unary {
    "operator": Token {
      "endCoordinates": Coordinate {
        "col": 1,
        "index": 1,
        "line": 1,
      },
      "lexeme": "-",
      "literal": null,
      "startCoordinates": Coordinate {
        "col": 0,
        "index": 0,
        "line": 1,
      },
      "type": 6,
    },
    "right": Literal {
      "context": "regular",
      "value": 2,
    },
  },
  "operator": Token {
    "endCoordinates": Coordinate {
      "col": 4,
      "index": 4,
      "line": 1,
    },
    "lexeme": "-",
    "literal": null,
    "startCoordinates": Coordinate {
      "col": 3,
      "index": 3,
      "line": 1,
    },
    "type": 6,
  },
  "right": Literal {
    "context": "regular",
    "value": 2,
  },
}
`;

exports[`Expression Parsing Parses addition correctly 6`] = `
Binary {
  "left": Unary {
    "operator": Token {
      "endCoordinates": Coordinate {
        "col": 1,
        "index": 1,
        "line": 1,
      },
      "lexeme": "-",
      "literal": null,
      "startCoordinates": Coordinate {
        "col": 0,
        "index": 0,
        "line": 1,
      },
      "type": 6,
    },
    "right": Literal {
      "context": "regular",
      "value": 3,
    },
  },
  "operator": Token {
    "endCoordinates": Coordinate {
      "col": 4,
      "index": 4,
      "line": 1,
    },
    "lexeme": "-",
    "literal": null,
    "startCoordinates": Coordinate {
      "col": 3,
      "index": 3,
      "line": 1,
    },
    "type": 6,
  },
  "right": Unary {
    "operator": Token {
      "endCoordinates": Coordinate {
        "col": 6,
        "index": 6,
        "line": 1,
      },
      "lexeme": "-",
      "literal": null,
      "startCoordinates": Coordinate {
        "col": 5,
        "index": 5,
        "line": 1,
      },
      "type": 6,
    },
    "right": Literal {
      "context": "regular",
      "value": 3,
    },
  },
}
`;

exports[`Expression Parsing Parses comparison correctly 1`] = `
Binary {
  "left": Literal {
    "context": "regular",
    "value": 3,
  },
  "operator": Token {
    "endCoordinates": Coordinate {
      "col": 3,
      "index": 3,
      "line": 1,
    },
    "lexeme": ">",
    "literal": null,
    "startCoordinates": Coordinate {
      "col": 2,
      "index": 2,
      "line": 1,
    },
    "type": 15,
  },
  "right": Literal {
    "context": "regular",
    "value": 1,
  },
}
`;

exports[`Expression Parsing Parses comparison correctly 2`] = `
Binary {
  "left": Literal {
    "context": "regular",
    "value": 2,
  },
  "operator": Token {
    "endCoordinates": Coordinate {
      "col": 3,
      "index": 3,
      "line": 1,
    },
    "lexeme": "<",
    "literal": null,
    "startCoordinates": Coordinate {
      "col": 2,
      "index": 2,
      "line": 1,
    },
    "type": 17,
  },
  "right": Literal {
    "context": "regular",
    "value": 2,
  },
}
`;

exports[`Expression Parsing Parses comparison correctly 3`] = `
Binary {
  "left": Literal {
    "context": "regular",
    "value": 3,
  },
  "operator": Token {
    "endCoordinates": Coordinate {
      "col": 4,
      "index": 4,
      "line": 1,
    },
    "lexeme": "<=",
    "literal": null,
    "startCoordinates": Coordinate {
      "col": 2,
      "index": 2,
      "line": 1,
    },
    "type": 18,
  },
  "right": Literal {
    "context": "regular",
    "value": 3,
  },
}
`;

exports[`Expression Parsing Parses comparison correctly 4`] = `
Binary {
  "left": Literal {
    "context": "regular",
    "value": 3,
  },
  "operator": Token {
    "endCoordinates": Coordinate {
      "col": 4,
      "index": 4,
      "line": 1,
    },
    "lexeme": ">=",
    "literal": null,
    "startCoordinates": Coordinate {
      "col": 2,
      "index": 2,
      "line": 1,
    },
    "type": 16,
  },
  "right": Literal {
    "context": "regular",
    "value": 1,
  },
}
`;

exports[`Expression Parsing Parses equality correctly 1`] = `
Binary {
  "left": Literal {
    "context": "regular",
    "value": 3,
  },
  "operator": Token {
    "endCoordinates": Coordinate {
      "col": 4,
      "index": 4,
      "line": 1,
    },
    "lexeme": "==",
    "literal": null,
    "startCoordinates": Coordinate {
      "col": 2,
      "index": 2,
      "line": 1,
    },
    "type": 14,
  },
  "right": Literal {
    "context": "regular",
    "value": 3,
  },
}
`;

exports[`Expression Parsing Parses equality correctly 2`] = `
Binary {
  "left": Literal {
    "context": "regular",
    "value": 3,
  },
  "operator": Token {
    "endCoordinates": Coordinate {
      "col": 4,
      "index": 4,
      "line": 1,
    },
    "lexeme": "!=",
    "literal": null,
    "startCoordinates": Coordinate {
      "col": 2,
      "index": 2,
      "line": 1,
    },
    "type": 12,
  },
  "right": Literal {
    "context": "regular",
    "value": 2,
  },
}
`;

exports[`Expression Parsing Parses equality correctly 3`] = `
Binary {
  "left": Literal {
    "context": "regular",
    "value": 3,
  },
  "operator": Token {
    "endCoordinates": Coordinate {
      "col": 4,
      "index": 4,
      "line": 1,
    },
    "lexeme": "!=",
    "literal": null,
    "startCoordinates": Coordinate {
      "col": 2,
      "index": 2,
      "line": 1,
    },
    "type": 12,
  },
  "right": Unary {
    "operator": Token {
      "endCoordinates": Coordinate {
        "col": 6,
        "index": 6,
        "line": 1,
      },
      "lexeme": "-",
      "literal": null,
      "startCoordinates": Coordinate {
        "col": 5,
        "index": 5,
        "line": 1,
      },
      "type": 6,
    },
    "right": Literal {
      "context": "regular",
      "value": 3,
    },
  },
}
`;

exports[`Expression Parsing Parses equality correctly 4`] = `
Binary {
  "left": Unary {
    "operator": Token {
      "endCoordinates": Coordinate {
        "col": 1,
        "index": 1,
        "line": 1,
      },
      "lexeme": "-",
      "literal": null,
      "startCoordinates": Coordinate {
        "col": 0,
        "index": 0,
        "line": 1,
      },
      "type": 6,
    },
    "right": Literal {
      "context": "regular",
      "value": 3,
    },
  },
  "operator": Token {
    "endCoordinates": Coordinate {
      "col": 5,
      "index": 5,
      "line": 1,
    },
    "lexeme": "!=",
    "literal": null,
    "startCoordinates": Coordinate {
      "col": 3,
      "index": 3,
      "line": 1,
    },
    "type": 12,
  },
  "right": Unary {
    "operator": Token {
      "endCoordinates": Coordinate {
        "col": 7,
        "index": 7,
        "line": 1,
      },
      "lexeme": "-",
      "literal": null,
      "startCoordinates": Coordinate {
        "col": 6,
        "index": 6,
        "line": 1,
      },
      "type": 6,
    },
    "right": Literal {
      "context": "regular",
      "value": 3,
    },
  },
}
`;

exports[`Expression Parsing Parses equality correctly 5`] = `
Binary {
  "left": Unary {
    "operator": Token {
      "endCoordinates": Coordinate {
        "col": 1,
        "index": 1,
        "line": 1,
      },
      "lexeme": "!",
      "literal": null,
      "startCoordinates": Coordinate {
        "col": 0,
        "index": 0,
        "line": 1,
      },
      "type": 11,
    },
    "right": Literal {
      "context": "regular",
      "value": true,
    },
  },
  "operator": Token {
    "endCoordinates": Coordinate {
      "col": 8,
      "index": 8,
      "line": 1,
    },
    "lexeme": "!=",
    "literal": null,
    "startCoordinates": Coordinate {
      "col": 6,
      "index": 6,
      "line": 1,
    },
    "type": 12,
  },
  "right": Literal {
    "context": "regular",
    "value": true,
  },
}
`;

exports[`Expression Parsing Parses equality correctly 6`] = `
Binary {
  "left": Unary {
    "operator": Token {
      "endCoordinates": Coordinate {
        "col": 1,
        "index": 1,
        "line": 1,
      },
      "lexeme": "!",
      "literal": null,
      "startCoordinates": Coordinate {
        "col": 0,
        "index": 0,
        "line": 1,
      },
      "type": 11,
    },
    "right": Literal {
      "context": "regular",
      "value": true,
    },
  },
  "operator": Token {
    "endCoordinates": Coordinate {
      "col": 8,
      "index": 8,
      "line": 1,
    },
    "lexeme": "==",
    "literal": null,
    "startCoordinates": Coordinate {
      "col": 6,
      "index": 6,
      "line": 1,
    },
    "type": 14,
  },
  "right": Unary {
    "operator": Token {
      "endCoordinates": Coordinate {
        "col": 10,
        "index": 10,
        "line": 1,
      },
      "lexeme": "!",
      "literal": null,
      "startCoordinates": Coordinate {
        "col": 9,
        "index": 9,
        "line": 1,
      },
      "type": 11,
    },
    "right": Literal {
      "context": "regular",
      "value": true,
    },
  },
}
`;

exports[`Expression Parsing Parses multiplication correctly 1`] = `
Binary {
  "left": Literal {
    "context": "regular",
    "value": 3,
  },
  "operator": Token {
    "endCoordinates": Coordinate {
      "col": 3,
      "index": 3,
      "line": 1,
    },
    "lexeme": "*",
    "literal": null,
    "startCoordinates": Coordinate {
      "col": 2,
      "index": 2,
      "line": 1,
    },
    "type": 10,
  },
  "right": Literal {
    "context": "regular",
    "value": 1,
  },
}
`;

exports[`Expression Parsing Parses multiplication correctly 2`] = `
Binary {
  "left": Unary {
    "operator": Token {
      "endCoordinates": Coordinate {
        "col": 1,
        "index": 1,
        "line": 1,
      },
      "lexeme": "-",
      "literal": null,
      "startCoordinates": Coordinate {
        "col": 0,
        "index": 0,
        "line": 1,
      },
      "type": 6,
    },
    "right": Literal {
      "context": "regular",
      "value": 2,
    },
  },
  "operator": Token {
    "endCoordinates": Coordinate {
      "col": 4,
      "index": 4,
      "line": 1,
    },
    "lexeme": "*",
    "literal": null,
    "startCoordinates": Coordinate {
      "col": 3,
      "index": 3,
      "line": 1,
    },
    "type": 10,
  },
  "right": Literal {
    "context": "regular",
    "value": 2,
  },
}
`;

exports[`Expression Parsing Parses multiplication correctly 3`] = `
Binary {
  "left": Unary {
    "operator": Token {
      "endCoordinates": Coordinate {
        "col": 1,
        "index": 1,
        "line": 1,
      },
      "lexeme": "-",
      "literal": null,
      "startCoordinates": Coordinate {
        "col": 0,
        "index": 0,
        "line": 1,
      },
      "type": 6,
    },
    "right": Literal {
      "context": "regular",
      "value": 3,
    },
  },
  "operator": Token {
    "endCoordinates": Coordinate {
      "col": 4,
      "index": 4,
      "line": 1,
    },
    "lexeme": "*",
    "literal": null,
    "startCoordinates": Coordinate {
      "col": 3,
      "index": 3,
      "line": 1,
    },
    "type": 10,
  },
  "right": Unary {
    "operator": Token {
      "endCoordinates": Coordinate {
        "col": 6,
        "index": 6,
        "line": 1,
      },
      "lexeme": "-",
      "literal": null,
      "startCoordinates": Coordinate {
        "col": 5,
        "index": 5,
        "line": 1,
      },
      "type": 6,
    },
    "right": Literal {
      "context": "regular",
      "value": 3,
    },
  },
}
`;

exports[`Expression Parsing Parses multiplication correctly 4`] = `
Binary {
  "left": Literal {
    "context": "regular",
    "value": 3,
  },
  "operator": Token {
    "endCoordinates": Coordinate {
      "col": 3,
      "index": 3,
      "line": 1,
    },
    "lexeme": "/",
    "literal": null,
    "startCoordinates": Coordinate {
      "col": 2,
      "index": 2,
      "line": 1,
    },
    "type": 9,
  },
  "right": Literal {
    "context": "regular",
    "value": 1,
  },
}
`;

exports[`Expression Parsing Parses multiplication correctly 5`] = `
Binary {
  "left": Unary {
    "operator": Token {
      "endCoordinates": Coordinate {
        "col": 1,
        "index": 1,
        "line": 1,
      },
      "lexeme": "-",
      "literal": null,
      "startCoordinates": Coordinate {
        "col": 0,
        "index": 0,
        "line": 1,
      },
      "type": 6,
    },
    "right": Literal {
      "context": "regular",
      "value": 2,
    },
  },
  "operator": Token {
    "endCoordinates": Coordinate {
      "col": 4,
      "index": 4,
      "line": 1,
    },
    "lexeme": "/",
    "literal": null,
    "startCoordinates": Coordinate {
      "col": 3,
      "index": 3,
      "line": 1,
    },
    "type": 9,
  },
  "right": Literal {
    "context": "regular",
    "value": 2,
  },
}
`;

exports[`Expression Parsing Parses multiplication correctly 6`] = `
Binary {
  "left": Unary {
    "operator": Token {
      "endCoordinates": Coordinate {
        "col": 1,
        "index": 1,
        "line": 1,
      },
      "lexeme": "-",
      "literal": null,
      "startCoordinates": Coordinate {
        "col": 0,
        "index": 0,
        "line": 1,
      },
      "type": 6,
    },
    "right": Literal {
      "context": "regular",
      "value": 3,
    },
  },
  "operator": Token {
    "endCoordinates": Coordinate {
      "col": 4,
      "index": 4,
      "line": 1,
    },
    "lexeme": "/",
    "literal": null,
    "startCoordinates": Coordinate {
      "col": 3,
      "index": 3,
      "line": 1,
    },
    "type": 9,
  },
  "right": Unary {
    "operator": Token {
      "endCoordinates": Coordinate {
        "col": 6,
        "index": 6,
        "line": 1,
      },
      "lexeme": "-",
      "literal": null,
      "startCoordinates": Coordinate {
        "col": 5,
        "index": 5,
        "line": 1,
      },
      "type": 6,
    },
    "right": Literal {
      "context": "regular",
      "value": 3,
    },
  },
}
`;

exports[`Expression Parsing Parses primary characters correctly 1`] = `
Literal {
  "context": "regular",
  "value": 3,
}
`;

exports[`Expression Parsing Parses primary characters correctly 2`] = `
Literal {
  "context": "regular",
  "value": 321,
}
`;

exports[`Expression Parsing Parses primary characters correctly 3`] = `
Literal {
  "context": "regular",
  "value": 0.3,
}
`;

exports[`Expression Parsing Parses primary characters correctly 4`] = `
Literal {
  "context": "regular",
  "value": 0.321,
}
`;

exports[`Expression Parsing Parses primary characters correctly 5`] = `
Literal {
  "context": "regular",
  "value": 321.123,
}
`;

exports[`Expression Parsing Parses primary characters correctly 6`] = `
Literal {
  "context": "regular",
  "value": "",
}
`;

exports[`Expression Parsing Parses primary characters correctly 7`] = `
Literal {
  "context": "regular",
  "value": "hello",
}
`;

exports[`Expression Parsing Parses primary characters correctly 8`] = `
Literal {
  "context": "regular",
  "value": "
        <strong>
          Independent Woman
        </strong>
      ",
}
`;

exports[`Expression Parsing Parses primary characters correctly 9`] = `
Literal {
  "context": "regular",
  "value": true,
}
`;

exports[`Expression Parsing Parses primary characters correctly 10`] = `
Literal {
  "context": "regular",
  "value": false,
}
`;

exports[`Expression Parsing Parses primary characters correctly 11`] = `
Literal {
  "context": "regular",
  "value": null,
}
`;

exports[`Expression Parsing Parses unaries correctly 1`] = `
Unary {
  "operator": Token {
    "endCoordinates": Coordinate {
      "col": 1,
      "index": 1,
      "line": 1,
    },
    "lexeme": "-",
    "literal": null,
    "startCoordinates": Coordinate {
      "col": 0,
      "index": 0,
      "line": 1,
    },
    "type": 6,
  },
  "right": Literal {
    "context": "regular",
    "value": 3,
  },
}
`;

exports[`Expression Parsing Parses unaries correctly 2`] = `
Unary {
  "operator": Token {
    "endCoordinates": Coordinate {
      "col": 1,
      "index": 1,
      "line": 1,
    },
    "lexeme": "!",
    "literal": null,
    "startCoordinates": Coordinate {
      "col": 0,
      "index": 0,
      "line": 1,
    },
    "type": 11,
  },
  "right": Literal {
    "context": "regular",
    "value": 3,
  },
}
`;
